{{ if .Values.kafka.enabled -}}
{{- include "require" . -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "elixier.fullname" . }}-kafka-s
  labels:
    {{- include "elixier.labels" . | nindent 4 }}
    component: kafka
    subcomponent: server
spec:
  replicas: {{ .Values.kafka.replicas }}
  serviceName: {{ include "elixier.fullname" . }}-kafka-s
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      {{- include "elixier.selectorLabels" . | nindent 6 }}
      component: kafka
      subcomponent: server
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "elixier.selectorLabels" . | nindent 8 }}
        component: kafka
        subcomponent: server
    spec:
      setHostnameAsFQDN: true
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "elixier.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        {{- include "elixier.kafka.volumes" . | nindent 8 }}

      containers:
        - name: main
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.kafka_image.repository }}:{{ .Values.kafka_image.tag }}"
          imagePullPolicy: {{ .Values.kafka_image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- include "elixier.kafka.volume-mounts" . | nindent 12 }}
          args: ['start']
          env:
            {{- include "elixier.kafka.env" . | nindent 12 }}
          ports:
            - name: kafka
              containerPort: 9092
              protocol: TCP
            - name: controller
              containerPort: 9093
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 9093
            initialDelaySeconds: 30
            periodSeconds: 300
          readinessProbe:
            tcpSocket:
              port: 9093
            initialDelaySeconds: 30
            periodSeconds: 300
      terminationGracePeriodSeconds: {{ .Values.kafka.termination_grace_period | default "300" }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  {{ include "elixier.affinity" . | nindent 18 }}
                  - key: component
                    operator: In
                    values:
                      - kafka
                  - key: subcomponent
                    operator: In
                    values:
                      - server
              topologyKey: topology.kubernetes.io/zone
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: {{ include "elixier.fullname" . }}-kafka-datadir
      spec:
        accessModes:
          - {{ .Values.storageAccessMode | default "ReadWriteMany" }}
        {{ if .Values.storageClass -}}
        storageClassName: {{ quote .Values.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.kafka.instance_storage | default "1Gi" }}
{{- end }}
