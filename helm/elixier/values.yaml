# Default values for elixier.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

kubectl_image:
  repository: bitnami/kubectl
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

spark_image:
  repository: registry.gitlab.com/abyres/releases/elixier-spark
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "development"

pgsql_image:
  repository: registry.gitlab.com/abyres/releases/pgsql-citus
  pullPolicy: Always
  tag: "pgsql14-1.0.2-4"

hms_image:
  repository: registry.gitlab.com/abyres/releases/hive
  pullPolicy: Always
  tag: "3.1.2-2"

minio_image:
  repository: minio/minio
  pullPolicy: Always
  tag: "latest"

mc_image:
  repository: minio/mc
  pullPolicy: Always
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

hive:
  metastore_uri: 
  metastore_port: 9083
  #  metastore_db_url: jdbc:mysql://mysql.lan/spark3_hive_metastore?createDatabaseIfNotExist=true&amp;permitMysqlScheme
  metastore_db_name: metastore
  metastore_db_type: postgres
  metastore_db_url: 
  metastore_db_driver: org.postgresql.Driver
  metastore_db_user: metastore
  metastore_db_password: metastore
  metastore_warehouse_dir: s3a://warehouse/tablespace
  metastore_java_options: -Dcom.amazonaws.sdk.disableCertChecking=true

spark:
  executor_cores: 1
  executor_memory: 2g
  executor_instances: 1
  deploy_cluster: false
  deploy_thrift: false
  memory_overhead_factor: 0.4
  int96_rebase: CORRECTED

s3a:
  endpoint: 
  access_key: minio
  secret_key: miniopassword

pgsql:
  volume_path: /var/lib/pgsql
  pg_version: 14
  pvc_size: 5Gi

minio:
  root_user: minio
  root_password: miniopassword
  instance_storage: 1G
  console_url: https://minio/

